@model PruebaBJXIT.Models.Usuarios

@{
    ViewBag.Title = "Create";
}

<h2> Crear Usuarios</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
<div class="card">
    <div class="card-header">Nuevo usuario</div>
    <div class="card-body">
        <!-- columns -->
        <div class="form-group row align-items-center">
            <label class="col-sm-1 col-form-label text-right"></label>
            <div class="col-sm-11">
                <div class="form-row align-items-center">
                    <div class="col-md-6 mb-3">
                        <!-- Input type text -->
                        @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-3 mb-3">
                        <!-- Input type text -->
                        @Html.LabelFor(model => model.ApellidoPaterno, htmlAttributes: new { @class = "control-label " })
                        @Html.EditorFor(model => model.ApellidoPaterno, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ApellidoPaterno, "", new { @class = "text-danger" })

                    </div>

                    <div class="col-md-3 mb-3">
                        <!-- Input type text -->
                        @Html.LabelFor(model => model.ApellidoMaterno, htmlAttributes: new { @class = "control-label " })
                        @Html.EditorFor(model => model.ApellidoMaterno, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ApellidoMaterno, "", new { @class = "text-danger" })

                    </div>

                </div>

            </div>
        </div>

        <!-- columns -->
        <div class="form-group row align-items-center">
            <label class="col-sm-1 col-form-label text-right"></label>
            <div class="col-sm-11">
                <div class="form-row align-items-center">
                    <div class="col-md-6 mb-3">
                        <!-- Input type text -->
                        @Html.LabelFor(model => model.Correo, htmlAttributes: new { @class = "control-label " })
                        @Html.EditorFor(model => model.Correo, new { htmlAttributes = new { @class = "form-control", @type = "email" } })
                        @Html.ValidationMessageFor(model => model.Correo, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-3 mb-3">
                        <!-- Input type text -->
                        @Html.LabelFor(model => model.Contrasenia, htmlAttributes: new { @class = "control-label " })
                        @Html.EditorFor(model => model.Contrasenia, new { htmlAttributes = new { @class = "form-control", @type = "password" } })
                        @Html.ValidationMessageFor(model => model.Contrasenia, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-3 mb-3">
                        <!-- Input type text -->
                        @Html.LabelFor(model => model.IdRol, "IdRol", htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownList("IdRol", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.IdRol, "", new { @class = "text-danger" })
                    </div>



                </div>
            </div>
        </div>
    </div>
    <div class="form-group  text-center m-md-4">
       
            <input type="submit" value="Create" class="btn btn-primary btn-block" />
     
    </div>
</div>



}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
